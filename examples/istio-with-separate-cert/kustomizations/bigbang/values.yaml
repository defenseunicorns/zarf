domain: bigbang.dev

registryCredentials:
  registry: "###ZARF_REGISTRY###"
  username: "zarf-pull"
  password: "###ZARF_REGISTRY_AUTH_PULL###"

git:
  existingSecret: "zarf-git-secret"

flux:
  interval: 1m
  rollback:
    cleanupOnFail: false

networkPolicies:
  enabled: true
  # When in prod use a real CIDR. Don't do this, it isn't secure. This is done here since it is a demo and the CIDR changes based on which Linux distro you are running on.
  controlPlaneCidr: "0.0.0.0/0"
  nodeCidr: "0.0.0.0/0"

istio:
  enabled: true
  git:
    repo: http://zarf-gitea-http.zarf.svc.cluster.local:3000/zarf-git-user/mirror__repo1.dso.mil__platform-one__big-bang__apps__core__istio-controlplane.git
  ingressGateways:
    public-ingressgateway:
      type: "LoadBalancer"
      kubernetesResourceSpec:
        resources:
          requests:
            cpu: "100m"
            memory: "512Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
  gateways:
    public:
      tls:
        key: |
          The chart won't let this be left blank. If it is blank, a default cert is applied (the `*.bigbang.dev` one)
        cert: |
          The chart won't let this be left blank. If it is blank, a default cert is applied (the `*.bigbang.dev` one)
  values:
    gateways:
      public:
        selector:
          app: "public-ingressgateway"
        servers:
          - hosts:
              - "*.bigbang.dev"
            port:
              name: https
              number: 8443
              protocol: HTTPS
            tls:
              credentialName: public-cert-actual
              mode: SIMPLE
    hub: "###ZARF_REGISTRY###/ironbank/opensource/istio"
    cni:
      image:
        hub: "###ZARF_REGISTRY###/ironbank/opensource/istio"
    istiod:
      hpaSpec:
        maxReplicas: 1
        minReplicas: 1
      resources:
        requests:
          cpu: "100m"
          memory: "1Gi"
        limits:
          cpu: "500m"
          memory: "1Gi"
    kiali:
      dashboard:
        auth:
          strategy: "anonymous"

istiooperator:
  enabled: true
  git:
    repo: http://zarf-gitea-http.zarf.svc.cluster.local:3000/zarf-git-user/mirror__repo1.dso.mil__platform-one__big-bang__apps__core__istio-operator.git
  values:
    hub: "###ZARF_REGISTRY###/ironbank/opensource/istio"
    operator:
      resources:
        requests:
          cpu: "100m"
          memory: "256Mi"
        limits:
          cpu: "500m"
          memory: "256Mi"

jaeger:
  enabled: false

kiali:
  enabled: true
  git:
    repo: http://zarf-gitea-http.zarf.svc.cluster.local:3000/zarf-git-user/mirror__repo1.dso.mil__platform-one__big-bang__apps__core__kiali.git
  values:
    image:
      repo: ###ZARF_REGISTRY###/ironbank/opensource/kiali/kiali-operator
    resources:
      requests:
        cpu: "100m"
        memory: "256Mi"
      limits:
        cpu: "500m"
        memory: "256Mi"
    cr:
      spec:
        deployment:
          image_name: ###ZARF_REGISTRY###/ironbank/opensource/kiali/kiali
          resources:
            requests:
              cpu: "100m"
              memory: "368Mi"
            limits:
              cpu: "500m"
              memory: "368Mi"
    svcPatchJob:
      image:
        repository: ###ZARF_REGISTRY###/ironbank/big-bang/base

clusterAuditor:
  enabled: false

gatekeeper:
  enabled: true
  git:
    repo: http://zarf-gitea-http.zarf.svc.cluster.local:3000/zarf-git-user/mirror__repo1.dso.mil__platform-one__big-bang__apps__core__policy.git
  values:
    postInstall:
      labelNamespace:
        image:
          repository: "###ZARF_REGISTRY###/ironbank/opensource/kubernetes-1.21/kubectl"
    postUpgrade:
      cleanupCRD:
        image:
          repository: "###ZARF_REGISTRY###/ironbank/opensource/kubernetes-1.21/kubectl"
    image:
      repository: "###ZARF_REGISTRY###/ironbank/opensource/openpolicyagent/gatekeeper"
    replicas: 1
    controllerManager:
      resources:
        requests:
          cpu: "175m"
          memory: "512Mi"
        limits:
          cpu: "1"
          memory: "2Gi"
    audit:
      resources:
        requests:
          cpu: "200m"
          memory: "768Mi"
        limits:
          cpu: "1.2"
          memory: "2Gi"
    violations:
      allowedDockerRegistries:
        parameters:
          repos:
            - "###ZARF_REGISTRY###"
          excludedResources:
            # K3s kube-system stuff, better than excluding the whole namespace
            - "kube-system/coredns-.*"
            - "kube-system/local-path-provisioner-.*"
            - "kube-system/metrics-server-.*"
            - "kube-system/svclb-.*"
            - "kube-system/traefik-.*"
            # K3s needs these due to how it creates services of type "LoadBalancer"
            - "istio-system/lb-port-.*"
            - "istio-system/svclb-.*"
            # K3s needs this if you are doing K3s-specific "HelmRelease"-type CRDs
            - ".*/helm-install-.*"
            - ".*/helm"
            # TODO: Get Gitea in Iron Bank
            - "git/stuart-gitea-.*"
            - "git/gitea"
            - "git/init"
      hostNetworking:
        parameters:
          excludedResources:
            # K3s needs these due to how it creates services of type "LoadBalancer"
            - "istio-system/svclb-.*"
            - "istio-system/lb-port-.*"
      httpsOnly:
        parameters:
          excludedResources:
            # TODO: Fix these ingresses so they don't need to be excluded
            - "git/git-ingress"
            - "registry/registry-ingress"

logging:
  enabled: false

eckoperator:
  enabled: false

fluentbit:
  enabled: false

monitoring:
  enabled: false

twistlock:
  enabled: false

addons:
  argocd:
    enabled: false
  authservice:
    enabled: false
  gitlab:
    enabled: false
  gitlabRunner:
    enabled: false
  anchore:
    enabled: false
  sonarqube:
    enabled: false
  minioOperator:
    enabled: false
  minio:
    enabled: false
  mattermostoperator:
    enabled: false
  mattermost:
    enabled: false
  nexus:
    enabled: false
  velero:
    enabled: false
  keycloak:
    enabled: false
