kind: ZarfPackageConfig
metadata:
  name: argocd
  description: Example showcasing installing ArgoCD

components:
  - name: argocd-helm-chart
    required: true
    charts:
      - name: argo-cd
        version: 5.38.1
        namespace: argocd
        url: https://argoproj.github.io/argo-helm
        releaseName: argocd-baseline
        valuesFiles:
          - baseline/values.yaml
    images:
      - quay.io/argoproj/argocd:v2.7.7
      - ghcr.io/dexidp/dex:v2.37.0
      - public.ecr.aws/docker/library/redis:7.0.11-alpine
  - name: argocd-apps
    required: false
    charts:
      - name: argocd-apps
        version: 1.3.0
        namespace: argocd
        url: https://argoproj.github.io/argo-helm
        releaseName: argocd-apps
        valuesFiles:
          - apps/values.yaml
    repos:
      - https://github.com/stefanprodan/podinfo.git
    images:
      - ghcr.io/stefanprodan/podinfo:6.4.0
      - docker.io/nginx:1.25.1
    actions:
      # This prepares the default namespace for the Zarf agent for the sample applications.
      onDeploy:
        before:
          - cmd: "zarf tools kubectl label namespaces default zarf.dev/agent-"
          - cmd: "zarf tools kubectl delete secret private-registry --ignore-not-found=true -n default"
          - cmd: "zarf tools kubectl create secret docker-registry private-registry --docker-server=${ZARF_REGISTRY} --docker-username=zarf-pull --docker-password=${ZARF_REGISTRY_AUTH_PULL}"
        after:
          # This will use a wait action to wait for the pods to be ready
          - description: Podinfo pod to be ready via wait action
            wait:
              cluster:
                kind: pod
                name: app.kubernetes.io/name=apps-podinfo
                namespace: default
                condition: ready
