// Code generated by fileb0x at "2021-04-22 11:31:22.716484998 -0500 CDT m=+0.009159384" from config file "assets.yaml" DO NOT EDIT.
// modification hash(2fc0abb24bcb94ded65c07c452fb6937.800d4913817790a7b28a615e79af3ed3)

package assets

import (
	"bytes"
	"compress/gzip"
	"context"
	"io"
	"net/http"
	"os"
	"path"

	"golang.org/x/net/webdav"
)

var (
	// CTX is a context for webdav vfs
	CTX = context.Background()

	// FS is a virtual memory file system
	FS = webdav.NewMemFS()

	// Handler is used to server files through a http handler
	Handler *webdav.Handler

	// HTTP is the http file system
	HTTP http.FileSystem = new(HTTPFS)
)

// HTTPFS implements http.FileSystem
type HTTPFS struct {
	// Prefix allows to limit the path of all requests. F.e. a prefix "css" would allow only calls to /css/*
	Prefix string
}

// FileREADMEMd is "README.md"
var FileREADMEMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x8c\x56\xdf\x8f\xdc\xb6\x11\x7e\xd7\x5f\x31\xf0\x06\xf0\x9d\x7b\xbb\x1b\xc0\x0f\x0d\x0e\x46\x81\x73\xeb\x26\xf7\xd0\xac\x91\x5c\xdb\x87\x83\x61\x8d\xc8\x91\xc4\x2e\x45\xca\x9c\xe1\xae\x95\x22\xff\x7b\x31\x94\x74\xb7\x71\x5b\x23\x2f\x77\x2b\x69\x48\x7e\xf3\xe3\xfb\x3e\x6e\x60\xc2\xa1\xaa\x1e\x7a\xc7\xd0\x46\x6f\x29\x81\x89\x41\xd0\x05\x2e\x3f\x28\x88\x7e\x48\xd0\x64\xe7\xad\x0b\x1d\xbc\x75\xdd\x5b\x0c\x1d\x64\x71\xde\xc9\x04\xc6\x67\x16\x4a\xbc\x03\x0c\x16\xc6\x14\x6d\x36\xc4\x80\xc0\xe4\xdb\x2d\xe7\xb6\x75\xc6\x51\x10\x78\xac\x53\x0e\xf5\x87\xab\x5e\x64\xe4\xdb\xfd\x7e\xc0\x23\x69\xcc\xce\xc5\xfd\x35\xb4\xce\x13\x48\x8f\x02\xe7\x9e\x02\xd0\x67\x32\x59\xc8\xde\xc0\xd9\x79\x0f\x2e\xb0\x60\x10\x87\x42\x80\x90\x08\xed\xb4\x95\xb8\xcd\x4c\x70\x7c\xcd\x2b\x06\x45\xcc\x8e\x45\x61\xc6\x16\x0c\x26\x6a\xb3\xf7\x93\x42\x21\x23\x64\xe1\x71\x44\x73\xc4\x8e\xf8\xc3\xd5\x66\xfd\x79\xbd\xd3\xfc\x09\x12\x71\xf6\x02\x4e\xb1\x7f\xa4\xcf\x92\x68\x20\x3f\x7d\x84\x31\x26\xc1\xc6\x13\x5c\xbd\x81\xd7\xdf\x7e\xfb\xb7\xb7\xd7\x30\x91\x00\x1b\xf4\xe5\xf5\xd3\xe1\x38\x96\xe7\xd8\x42\xca\x21\x28\x88\x47\xf4\x43\x64\x01\x0c\xd3\xb9\xa7\x44\xcf\xc9\x1f\x5f\xf3\x9c\xb7\x89\xc3\xe8\x49\xc8\x4f\x80\x2e\x75\x38\x8e\x9a\xb4\x96\xd2\x60\x00\xa6\x74\x22\x40\x06\xe9\x09\xda\x98\x83\x45\x71\x31\x94\x8e\xb4\x39\x49\x4f\x09\x6c\x3c\x07\x96\x44\x38\x3c\xf7\xa2\xaa\x36\x1b\xf8\x3b\x63\x47\x55\xf5\x70\xf8\xcb\xe1\x16\x0e\x8d\x36\xb5\xec\xe3\x51\x88\x05\x96\xfc\xed\x97\x9d\x84\x36\xc5\x61\x6d\xf3\x4b\x86\x44\x9e\x90\x89\x61\xc4\x8e\x6e\x40\x74\x54\x14\x1b\xb9\x72\x7c\xa3\x1d\xa9\x5f\xed\x52\x0e\x3b\xe9\x7e\xa9\x21\xa6\xf5\xf1\x17\x96\x7a\x57\x1d\x96\xe1\x01\x27\x90\x59\xcb\xa2\x20\xb4\xa3\x29\x1b\xcd\x86\xe1\xb1\x21\x1f\xcf\x1f\xae\x36\x25\x50\x1b\x72\x08\x86\x20\x16\xcc\x5a\x0f\x49\x18\xb8\xa5\xa4\x7b\x48\x04\x84\x5e\xcb\xea\x5d\xc8\x9f\x61\x40\xd3\xbb\x40\xa5\x66\x29\x07\x0d\x41\x86\x14\xa3\xdc\x56\x55\x5d\xd7\x0d\x72\x5f\x71\xb6\x11\x76\xfb\x09\x87\x15\xa8\x7e\xaa\xaa\xfb\x00\x9e\x58\xeb\x8b\x01\x10\x06\x17\xb2\xd0\x0d\x4c\x31\xbf\xf4\x1e\x7a\xd4\xea\xc3\x31\x37\x94\x02\x09\x3d\x4f\xda\xda\x61\xf4\xbe\xa4\x33\x26\xda\x26\xfa\x94\x1d\x3b\x0d\x0b\x44\x96\xac\x42\xed\xe7\xfe\x5b\xb0\x34\xfa\x38\xc1\x90\xc5\xbb\x51\xc7\xe4\x2b\xcd\xd3\x71\x64\x41\xc9\xac\xd3\xa4\xfb\x3f\x0d\x59\xa2\x79\x02\xb4\x03\x0d\xc1\x10\x83\x93\x98\xc8\x82\xd3\x69\x39\x51\x42\x0f\x67\x9c\xf8\x22\xf7\x0d\xf0\xc4\x42\x83\x05\x0a\x3a\xa1\x76\xa1\x93\x21\xae\xfe\x15\x73\x0a\xe8\x8d\x78\xd8\xfa\x16\xb6\x59\xf9\x54\x55\x9b\x92\xb3\x11\x5f\x9d\x51\x4c\xbf\x3e\x41\x47\x02\x21\xde\x68\xd6\xdb\xbb\xb9\x82\x9b\xcd\x06\x0e\x27\x4a\xc9\x59\xba\x24\x62\xeb\xba\x9c\x0a\xd6\xaa\xfa\x39\x0e\x24\x6e\x20\xd6\xe6\x14\xde\x03\x53\x60\xd2\x02\xc5\x75\xad\xa6\x69\xa9\x45\x25\x61\x21\xf5\xe5\x1e\x37\xc0\xd9\xf4\xda\xd8\x22\x0f\x53\xcc\x70\x0c\xf1\xbc\x36\xaa\xa1\xc2\xc7\x75\xb8\x56\x18\x31\xcf\xb5\x2f\x1a\xa2\x3d\xd1\x03\x55\x34\x34\x88\x86\x86\xac\x76\xa9\x26\x31\xb6\x2e\x45\x21\xb4\x5a\xf1\x9a\x3f\x79\x27\x54\x43\x83\xe6\x48\xc1\x6a\x4b\x7e\x3f\xd2\xd1\xa3\x21\x45\x96\x20\x9e\xc3\xf2\x75\x16\x38\x17\xa0\xde\x93\x98\x7d\xc2\x60\x7a\x4a\xaa\x03\xfb\x39\x60\x37\xe1\xe0\x6b\x68\xa8\x8d\x89\x16\xfd\x5b\xf3\x29\xca\x59\x76\xd8\xcd\x05\xff\xd9\xe0\xb3\xf2\x54\xd5\x7d\xbb\x4c\xdc\x0d\x90\x47\x16\x67\xb0\xc8\x5e\x89\xba\x2c\x48\x33\x01\xda\x22\xe3\x83\x9e\x52\xe4\x25\xf1\x1e\xbb\xa2\xf3\x1a\xc9\x38\x90\x0e\x50\x29\xf1\x39\x66\xaf\xd5\x93\x5e\xf3\xfc\xcd\x48\x45\xa5\x4b\xa0\x33\x84\x68\xa9\x32\x28\xf0\x27\xf8\x5a\x66\xf0\xe6\xcd\xbb\xc3\x5f\x2b\x89\x47\x0a\xb7\xf0\xe2\x9b\x7f\x2f\x90\xb6\xe5\xcd\xaf\x2f\xaa\x19\x4b\xf9\x34\xff\xdc\xe6\xe4\x7f\x7d\x51\xe9\xaa\xff\x4b\xdf\xcd\x06\xde\x2f\x32\xae\x9a\xe1\xa7\x92\x43\x83\x89\x94\xca\x6e\xc8\xc3\x2a\x73\x0c\xfa\xd2\x05\xe3\xb3\x9d\xd9\xa2\x91\x5f\x4a\x9f\x0b\x10\x93\x9a\xa0\x44\x25\xe0\x04\x92\x72\x99\x52\x27\x2f\x79\xde\x12\xbd\x63\x81\x80\x92\x13\xed\x00\x1e\x8a\x30\x7b\x1f\xcf\x5a\xd5\xdf\x1c\x36\x33\x9e\xac\xd6\xaa\x99\xe5\xe8\x15\xd4\x4a\xa5\xed\xc9\x8d\x35\x20\x78\xd7\xf5\x72\x26\xfd\x0b\xff\xb8\x7f\xff\xa4\x2a\x01\xc5\x9d\xd4\x12\x5c\x80\xe3\x77\xb3\x01\xff\x70\x57\x0c\x39\x45\x3f\x7a\x0c\x04\x3e\xa2\x85\x06\x3d\x06\xe3\x42\x57\xbd\x82\xc3\x9f\xef\x8b\x9b\xa0\xb8\x62\x4b\xb3\x8d\xab\x56\x51\xe7\x58\xd2\x54\xbd\x5a\x33\x00\xb5\xa1\x2b\xbe\x56\x72\xec\x63\x02\xe6\x1e\x3a\x27\xcb\x3c\xcc\xfa\xd3\x45\xf4\xca\x05\xd5\x94\x69\x4d\x0c\x3e\x0e\x99\xe5\xa3\xf2\x4d\xa2\x9a\xfd\xa9\xb0\x5e\x67\xa9\xd8\x9f\x56\xd3\xd1\x0c\x38\x8e\x94\x50\x62\xe2\x39\x8e\x5d\x2c\xb9\xfd\x0f\xc5\x9b\x27\x6c\x71\x9c\xd9\xbb\xde\xaa\x11\x54\x55\xf9\x37\x57\x73\xa4\xd4\xc6\x34\xa8\x5f\x15\x13\x79\x24\x4c\xd2\xfb\xe9\xd9\x53\x97\x17\x3b\x4b\xa7\xfd\xb5\xe2\xa3\xc0\x39\xa9\x31\x00\x21\x4f\x2b\xf7\x13\x8d\x84\xb3\xa3\xcf\xbe\x44\xe1\xe4\x52\x0c\x83\x5e\x52\x1c\x6b\x8c\x5d\xb2\xd3\xab\x8c\xde\x64\x5c\xe8\x9e\xa2\x31\x89\x6b\xd1\xc8\xee\x92\x0d\xc8\x9c\x07\x45\xb5\x60\x58\xee\x42\xc5\x13\xd6\xc9\x63\x41\xaf\xe2\xab\x9f\xf0\x84\x6e\xbe\x3d\xc4\x00\xdf\xbc\xbf\x7b\xf8\xa1\x5a\x57\xfe\xa1\x99\x53\xdf\x2c\xe7\x09\xa6\x06\xbd\x2f\x4e\xf0\x64\xd9\xc7\xd7\xbc\x65\x9a\xfd\xcf\xd2\x48\xc1\x52\x30\x8e\xf8\x06\xa2\x92\x60\xb1\x1f\xed\xc2\x2c\xfd\xea\xe2\x9f\xb2\x4b\x0a\x71\x5d\xe7\x02\xbc\x0b\x6d\x4c\x66\x96\x03\x4b\xd5\x06\xfe\x79\xf7\xd3\x8f\xf7\x3f\x7e\x7f\xab\x63\xcd\x54\x80\x5f\x5e\x85\xd6\xa3\x44\x61\x2b\x7f\x1e\xee\x7e\xfa\xfe\xdd\x03\x44\xbe\x81\x73\xef\x4c\xaf\xf5\x3b\xf7\x85\x85\x53\x59\x1d\xe2\xc5\x45\xa3\xb4\x59\xef\x9b\x4f\xb9\x1a\x0a\x12\xf9\x8f\xdb\x8b\x7c\xb6\x69\x1c\xf8\xcb\x88\xef\xfe\x3b\x42\xf9\xff\x9f\x00\x00\x00\xff\xff\xc1\x30\xb8\x94\xbe\x0a\x00\x00")

// FileManifestsAutodeployGitServerGitServerYaml is "manifests/autodeploy/git-server/git-server.yaml"
var FileManifestsAutodeployGitServerGitServerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x74\x91\x4b\x8b\xe2\x40\x10\xc7\xef\xfd\x29\xea\x22\xec\x2e\x74\xa2\x17\xc1\xbe\xed\x8a\xa0\x2c\x04\x51\x77\xaf\x6b\x6d\x5b\x93\x34\x26\xdd\xa1\xab\x12\x70\x1e\xdf\x7d\xe8\xa8\x23\xce\xe3\x58\x55\xff\x7a\xfc\x7f\xa5\xb5\x56\xd8\xba\xbf\x14\xd9\x05\x6f\xa0\x9f\xa8\xa3\xf3\x07\x03\x05\x36\xc4\x2d\x5a\x52\x0d\x09\x1e\x50\xd0\x28\x00\x8f\x0d\x19\x28\x9d\x28\xf5\xbe\xb3\xa2\xba\xc9\x2c\x8a\xd4\x94\xb9\x90\xbf\x0d\x5a\x52\xdd\xcc\x2b\x8c\xf2\xc9\x20\x96\x2e\x15\xce\xe1\xb0\xcd\xc0\x09\x1b\xc5\x2d\xd9\xa4\xb2\xa9\xcf\x40\x25\xd2\xb2\xc9\xf3\xd1\xd3\xef\x3f\xbf\x16\x9b\x62\xb1\x5b\x6c\xff\xfd\x5c\xaf\x5e\x46\x39\x0b\x8a\xb3\xf9\x20\xe4\xbc\x74\xa2\x99\x62\x4f\x51\x8f\xb3\x71\x36\xc9\xa4\x7c\x54\x00\x82\xb1\x24\x29\x6e\x3b\x92\x01\x80\x1e\xeb\x8e\x78\x1e\xbc\x90\x17\x03\xcf\x5a\x01\x00\xb4\xc9\x10\x0b\x79\x4b\x66\x48\x00\x90\xc7\xff\x35\x1d\x0c\x48\xec\xe8\xa3\x73\x89\x48\x0f\xee\x98\xd9\xe0\x05\x9d\x0f\x59\xc7\x79\x3f\xc1\xba\xad\xf0\x0a\x61\xe5\xcb\x48\xcc\x9b\xd0\x09\xed\xe6\xeb\x2f\x98\xde\x71\x48\x89\x2b\x07\xf2\x12\x4f\xeb\xe0\xbc\xf0\xf9\x26\x7d\xd1\xc7\x34\x70\xc8\x69\x68\x50\x6c\x65\x60\x19\x58\xb6\xc5\xea\xdb\xfe\xc7\xfe\xfb\xa0\x3d\x5f\xb0\xe9\x6a\x1a\xc2\xc4\xc7\x59\xe2\xab\x39\x7d\xf7\x0b\x7d\x43\x78\xa9\x03\xb4\x21\x3d\x61\x36\x9d\x4d\x5f\x03\x00\x00\xff\xff\xd7\x96\x51\x18\x2e\x02\x00\x00")

// FileManifestsAutodeployKubeSystemKubeVipYaml is "manifests/autodeploy/kube-system/kube-vip.yaml"
var FileManifestsAutodeployKubeSystemKubeVipYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x9c\x55\xd1\x6e\xdb\x38\x10\x7c\xd7\x57\x10\xc2\x3d\x46\xce\xdd\x39\x38\x1c\xf4\xe6\xc6\x6e\x61\xa0\x31\x0c\x2b\x48\x51\x14\x85\xb1\xa2\xd6\x36\x6b\x8a\x24\xc8\xa5\x52\xb7\xe8\xbf\x17\x94\x6c\x55\xb6\xe4\x34\xa8\x1e\x82\x78\xc4\xd9\x59\xce\x0e\x29\x30\xe2\x09\xad\x13\x5a\xa5\xac\xfa\x27\xda\x0b\x55\xa4\x2c\x43\x5b\x09\x8e\x13\xce\xb5\x57\x14\x95\x48\x50\x00\x41\x1a\x31\xa6\xa0\xc4\x94\xed\x7d\x8e\x49\x25\xcc\x11\x70\x06\xf8\x09\x75\x07\x47\x58\x46\x49\x92\x44\xdd\xda\x36\x07\x3e\x02\x4f\x3b\x6d\xc5\x37\x20\xa1\xd5\x68\xff\xbf\x1b\x09\x7d\xdb\xaa\xde\x4b\xef\x08\xed\x4a\x4b\x3c\x93\x04\xa5\x34\xd5\x14\x17\x7e\xb2\xc1\x5a\x3e\x47\xab\x90\xb0\x2e\x09\x9e\xb4\x37\x05\x10\xa6\x2c\x26\xeb\x31\x6e\x3b\x6f\xda\x4b\x4f\x1b\x48\x6c\x50\xb3\x5e\x62\x5d\x3b\x61\x60\xc4\x3b\xab\xbd\x71\x29\xfb\x14\xc7\x9f\x1b\x3d\x74\xda\x5b\x8e\x35\xe6\x1a\x6f\x5c\x7c\xc3\xda\xff\x6f\x1d\x01\xf9\x1a\x52\xba\x40\x77\xe4\x55\x68\xf3\x9a\x23\x85\xa3\xf8\x26\xde\x62\xf8\xfb\x0c\xc4\x77\x61\x69\xd3\x61\xbd\xf6\x42\x97\x6b\x6d\x0b\xa1\xba\x36\x0d\xb5\x22\x11\xdc\x35\x31\xd6\xa8\xb1\x9e\xdc\x0d\x8b\xb9\xc5\x46\x38\x0c\xa9\xe7\xfd\x1b\xa1\x0a\xa1\xb6\xaf\x9f\x5e\x3f\x1e\x97\x26\xe7\xc7\x92\xc1\xec\x15\x6e\xea\xa1\x1e\xf7\xfb\x42\xed\x88\xb1\x7e\x30\x5e\x9c\xa3\xf3\xf9\x17\xe4\xe4\xd2\x28\x61\x83\x49\xfe\xf3\xfc\x82\x31\xee\x57\x54\xa7\x80\xa5\x56\x19\xbe\x74\x36\x92\xc2\x5d\x2f\xef\x0c\xf2\x40\x71\x28\x91\x93\xb6\x4d\xb0\xcb\x30\xab\xf7\x90\xa3\x3c\x26\x7d\xb8\x26\x61\x69\x64\x08\x77\x43\xea\x74\x10\x1e\x79\xc6\x1f\xae\xc0\xd8\xa9\x81\xf0\x70\xad\x08\x84\x42\xdb\xb2\x12\x06\x76\xdb\xa9\x91\xb0\x12\x14\x6c\xd1\xb6\x08\xaa\xaa\xfb\xba\x11\xa9\x84\x59\x83\x35\x2d\xce\x58\x05\xd2\x77\x0f\x61\x7f\xbd\x50\x84\x76\x03\x1c\xfb\xac\xbf\x9e\xe6\xcb\xf5\x7c\xf1\x38\x5b\xbd\x9d\xdc\xcf\x7a\x6c\xa3\x2d\x0d\x48\xfd\x77\x77\x37\x1e\x96\xe2\xa2\xb0\x03\x84\xf1\xbf\xfd\xe5\xdc\xac\x51\x41\x2e\xf1\xd5\x7b\xe1\x66\xdd\xce\xba\x4f\xea\xce\xfe\x92\xe9\x2a\x7e\x5d\x6c\x03\xd2\x5d\x71\x0e\x8a\xc2\xa2\x73\x57\x7c\x9b\x4c\xa7\xab\x59\x96\xb5\x6f\x45\x09\xdb\x60\x9a\x54\x85\xbd\x3d\xa5\x21\xfd\x7b\x34\x1e\x8d\xcf\xd7\x2c\xbd\x94\x4b\x2d\x05\x3f\xa4\x6c\xbe\x59\x68\x5a\x5a\x74\xa8\xe8\x4a\xa0\x5a\xb8\x73\x35\x7d\xff\xd1\xa2\x0e\xb9\xb7\x82\x0e\xf7\x5a\x11\x7e\xa5\xb4\xd3\x2d\x07\x03\xb9\x90\x82\x04\xba\x2e\xce\x18\x14\xc5\x39\x90\xb0\xc5\xec\x71\x3d\x99\x3e\xcc\x17\x03\xf8\x6a\xf2\xe1\x02\xcd\x3e\x66\xeb\xc7\xf9\xc3\x29\x33\x3b\xed\x68\x81\xf4\xac\xed\x3e\x65\x61\x7c\xa7\xc3\xa5\x0b\xcc\xce\x4e\xe0\x09\xad\xef\x93\x8b\xaf\x4a\x09\xe1\x16\xba\x08\x80\x3b\xbb\x60\x16\x43\xd6\x90\x96\x68\xbb\xdf\xaf\xd0\x21\x6e\x36\xc8\x29\x65\x0b\x9d\xf1\x1d\x16\xbe\x33\xfc\x3d\x1e\xd2\xdf\x34\x11\x31\xd6\x5c\xe7\x19\x59\x20\xdc\x1e\x6a\xcf\x7f\x06\x00\x00\xff\xff\xc3\x1f\x43\xa2\xcc\x07\x00\x00")

// FileManifestsAutodeployRegistryRegistryYaml is "manifests/autodeploy/registry/registry.yaml"
var FileManifestsAutodeployRegistryRegistryYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x7c\x91\x4d\xeb\xdb\x30\x0c\xc6\xef\xfe\x14\xba\x14\xb6\x81\xf3\x72\xd8\xc5\xb7\xad\x14\x5a\x06\xa1\xb4\xdd\xae\xab\xe6\x68\x89\x49\x62\x07\x4b\x09\x74\x2f\xdf\x7d\x24\x6d\xba\xae\xfb\xf3\x3f\x5a\xd6\x23\x3d\xcf\x4f\x5a\x6b\x85\xbd\xfb\x42\x91\x5d\xf0\x06\xc6\x5c\x35\xce\x97\x06\x0a\xec\x88\x7b\xb4\xa4\x3a\x12\x2c\x51\xd0\x28\x00\x8f\x1d\x19\x88\x54\x39\x96\x78\x51\xea\x59\x5e\x53\xdb\x25\x16\x45\x5a\x4a\x5c\x48\xef\xd3\xb6\xd4\x76\xeb\x1a\xa3\xbc\x30\xad\xa1\xd1\xf9\xdb\x6b\xde\x68\xe0\x82\x9d\xe2\x9e\xec\xd4\x64\x27\x99\x81\x5a\xa4\x67\x93\xa6\xab\x9f\x9f\x3e\x7f\xdc\x1c\x8a\xcd\x69\x73\xfc\xfa\x61\xbf\xfb\xbd\x4a\x59\x50\x9c\x4d\xe7\x46\x4e\xcb\x60\x1b\x8a\x7a\xf1\xa8\xf3\x24\xcf\x92\x3c\x91\xea\x87\x02\x10\x8c\x15\x49\xf1\x77\xd3\x3d\x0a\xc0\x88\xed\x40\xbc\x0e\x5e\xc8\x8b\x81\x5f\x5a\x01\x00\xf4\x53\x34\x16\xf2\x96\xcc\x5c\x00\x20\x8f\xdf\x5a\x2a\x0d\x48\x1c\xe8\x7f\x06\x12\x91\xbe\xbb\x26\xb1\xc1\x0b\x3a\x1f\x92\x81\xd3\x31\xc7\xb6\xaf\x71\xc1\xb1\xf3\x55\x24\xe6\x43\x18\x84\x4e\xeb\xfd\x6b\x88\xff\xe1\x72\xaf\x2e\x70\xc8\x4b\xbc\xec\x83\xf3\xc2\x57\x77\xfa\x51\x19\xa7\xf9\xf3\x87\x86\x0e\xc5\xd6\x06\xb6\x81\xe5\x58\xec\xde\x9c\xdf\x9d\xdf\xce\x82\xab\xa1\xc3\xd0\xd2\xfc\x64\x8a\xa3\xb3\xc4\x4b\x56\xfd\x78\x24\xfd\xc4\xf6\xd6\x03\xd0\x87\xe9\x44\xef\xb3\x2c\x53\x7f\x02\x00\x00\xff\xff\x86\xe0\xbf\x8a\x51\x02\x00\x00")

// FileManifestsAutodeployTraefikv2Traefikv2Yaml is "manifests/autodeploy/traefikv2/traefikv2.yaml"
var FileManifestsAutodeployTraefikv2Traefikv2Yaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x8c\x90\x5d\x6b\xdb\x30\x14\x86\xef\xf5\x2b\x0e\x8c\x5e\x5a\x4e\xcb\x56\x1a\xc1\x18\x5d\x1a\x58\x19\xb8\x66\xcd\x76\x3b\x0e\xd6\xa9\x2c\xaa\x2f\xa4\x93\x30\xef\xe3\xbf\x0f\x3b\x49\xbd\xa6\x6c\xcc\x57\xd6\xab\x47\xcf\x7b\x38\x55\x55\x09\x4c\xf6\x0b\xe5\x62\x63\x50\xb0\x3b\x17\x8f\x36\x68\x05\x0d\x7a\x2a\x09\x3b\x12\x9e\x18\x35\x32\x2a\x01\x10\xd0\x93\x02\xce\x48\x0f\xf6\x51\x88\xd3\xd7\x3d\x39\x2f\x3b\x64\x76\x24\x6d\xac\x9f\x64\x1f\xc8\xf9\x55\x8f\x99\xff\x21\xdb\x9f\xa7\x4a\x05\x03\x7a\x51\x12\x75\x23\xd6\x8d\x0f\x15\xf4\xcc\xa9\xa8\xba\x3e\xfb\xf1\xf1\xf3\xfb\xf5\xa7\x66\xbd\x59\xdf\x7f\xbd\x6e\x6f\x7f\x9d\xd5\x85\x91\x6d\x57\x4f\x60\xa9\x0f\xc2\x6a\x29\xcf\xaf\xe4\x85\x64\xf3\x5d\x00\x30\x66\x43\xdc\xcc\x0d\x73\xed\x0e\xdd\x96\xca\x2a\x06\xa6\xc0\x0a\x7e\x56\x02\x00\xc0\x7a\x34\xa4\xa6\xdf\x97\x93\x8e\x1f\xa3\x51\x70\x21\x5f\xcb\xab\x43\x90\xb6\xce\xb5\xd1\xd9\x6e\x50\x70\xfb\xd0\x44\x6e\x33\x15\x0a\xbc\xbf\x7d\x05\x9b\xbb\x9b\x3b\x05\xab\x1e\x83\x21\xe0\xde\x16\xe0\x08\x0d\xed\x28\xbf\x9b\x0c\x9a\x92\x8b\x83\x1f\x87\x38\x18\xf7\xcb\xbb\x41\xf2\x31\xdc\x13\x4f\x29\x6a\x6d\xd9\xc6\x80\xee\x3a\x9b\xed\x48\x97\x23\x5e\x41\x55\x51\xe0\x3c\xa4\x68\x03\x17\x99\xc9\xd8\xc2\x79\x90\xa8\x75\xa6\x52\xde\xaa\x37\x8b\xc5\xe2\x2f\xb0\xb1\x3c\x73\xcb\xcb\xe5\xe5\xc4\xa5\x98\x67\xff\xd1\x77\x3c\xef\xaf\x15\xfc\x61\x05\xa0\x6f\x29\x96\x69\x59\x5b\x3a\x09\x75\xfb\x12\x4f\x39\x72\xec\xa2\x53\xb0\x59\xb5\x87\xd4\x58\x3e\xad\x78\x1a\xe8\xff\x2a\x9e\xe1\xcf\x2b\x7e\x07\x00\x00\xff\xff\x63\x5f\x42\x73\xf1\x02\x00\x00")

// FileManifestsAutodeployYamNamespaceYaml is "manifests/autodeploy/yam/namespace.yaml"
var FileManifestsAutodeployYamNamespaceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\xd2\xd5\xd5\xe5\x4a\x2c\xc8\x0c\x4b\x2d\x2a\xce\xcc\xcf\xb3\x52\x28\x33\xe4\xca\xce\xcc\x4b\xb1\x52\xf0\x4b\xcc\x4d\x2d\x2e\x48\x4c\x4e\xe5\xca\x4d\x2d\x49\x4c\x49\x2c\x49\xb4\xe2\x52\x50\xc8\x4b\xcc\x4d\xb5\x52\xa8\x4c\xcc\xe5\x02\x04\x00\x00\xff\xff\xf8\xd8\x29\xd7\x39\x00\x00\x00")

func init() {
	err := CTX.Err()
	if err != nil {
		panic(err)
	}

	err = FS.Mkdir(CTX, "manifests/", 0777)
	if err != nil && err != os.ErrExist {
		panic(err)
	}

	err = FS.Mkdir(CTX, "manifests/autodeploy/", 0777)
	if err != nil && err != os.ErrExist {
		panic(err)
	}

	err = FS.Mkdir(CTX, "manifests/autodeploy/registry/", 0777)
	if err != nil && err != os.ErrExist {
		panic(err)
	}

	err = FS.Mkdir(CTX, "manifests/autodeploy/git-server/", 0777)
	if err != nil && err != os.ErrExist {
		panic(err)
	}

	err = FS.Mkdir(CTX, "manifests/autodeploy/kube-system/", 0777)
	if err != nil && err != os.ErrExist {
		panic(err)
	}

	err = FS.Mkdir(CTX, "manifests/autodeploy/yam/", 0777)
	if err != nil && err != os.ErrExist {
		panic(err)
	}

	err = FS.Mkdir(CTX, "manifests/autodeploy/traefikv2/", 0777)
	if err != nil && err != os.ErrExist {
		panic(err)
	}

	var f webdav.File

	var rb *bytes.Reader
	var r *gzip.Reader

	rb = bytes.NewReader(FileREADMEMd)
	r, err = gzip.NewReader(rb)
	if err != nil {
		panic(err)
	}

	err = r.Close()
	if err != nil {
		panic(err)
	}

	f, err = FS.OpenFile(CTX, "README.md", os.O_RDWR|os.O_CREATE|os.O_TRUNC, 0777)
	if err != nil {
		panic(err)
	}

	_, err = io.Copy(f, r)
	if err != nil {
		panic(err)
	}

	err = f.Close()
	if err != nil {
		panic(err)
	}

	rb = bytes.NewReader(FileManifestsAutodeployGitServerGitServerYaml)
	r, err = gzip.NewReader(rb)
	if err != nil {
		panic(err)
	}

	err = r.Close()
	if err != nil {
		panic(err)
	}

	f, err = FS.OpenFile(CTX, "manifests/autodeploy/git-server/git-server.yaml", os.O_RDWR|os.O_CREATE|os.O_TRUNC, 0777)
	if err != nil {
		panic(err)
	}

	_, err = io.Copy(f, r)
	if err != nil {
		panic(err)
	}

	err = f.Close()
	if err != nil {
		panic(err)
	}

	rb = bytes.NewReader(FileManifestsAutodeployKubeSystemKubeVipYaml)
	r, err = gzip.NewReader(rb)
	if err != nil {
		panic(err)
	}

	err = r.Close()
	if err != nil {
		panic(err)
	}

	f, err = FS.OpenFile(CTX, "manifests/autodeploy/kube-system/kube-vip.yaml", os.O_RDWR|os.O_CREATE|os.O_TRUNC, 0777)
	if err != nil {
		panic(err)
	}

	_, err = io.Copy(f, r)
	if err != nil {
		panic(err)
	}

	err = f.Close()
	if err != nil {
		panic(err)
	}

	rb = bytes.NewReader(FileManifestsAutodeployRegistryRegistryYaml)
	r, err = gzip.NewReader(rb)
	if err != nil {
		panic(err)
	}

	err = r.Close()
	if err != nil {
		panic(err)
	}

	f, err = FS.OpenFile(CTX, "manifests/autodeploy/registry/registry.yaml", os.O_RDWR|os.O_CREATE|os.O_TRUNC, 0777)
	if err != nil {
		panic(err)
	}

	_, err = io.Copy(f, r)
	if err != nil {
		panic(err)
	}

	err = f.Close()
	if err != nil {
		panic(err)
	}

	rb = bytes.NewReader(FileManifestsAutodeployTraefikv2Traefikv2Yaml)
	r, err = gzip.NewReader(rb)
	if err != nil {
		panic(err)
	}

	err = r.Close()
	if err != nil {
		panic(err)
	}

	f, err = FS.OpenFile(CTX, "manifests/autodeploy/traefikv2/traefikv2.yaml", os.O_RDWR|os.O_CREATE|os.O_TRUNC, 0777)
	if err != nil {
		panic(err)
	}

	_, err = io.Copy(f, r)
	if err != nil {
		panic(err)
	}

	err = f.Close()
	if err != nil {
		panic(err)
	}

	rb = bytes.NewReader(FileManifestsAutodeployYamNamespaceYaml)
	r, err = gzip.NewReader(rb)
	if err != nil {
		panic(err)
	}

	err = r.Close()
	if err != nil {
		panic(err)
	}

	f, err = FS.OpenFile(CTX, "manifests/autodeploy/yam/namespace.yaml", os.O_RDWR|os.O_CREATE|os.O_TRUNC, 0777)
	if err != nil {
		panic(err)
	}

	_, err = io.Copy(f, r)
	if err != nil {
		panic(err)
	}

	err = f.Close()
	if err != nil {
		panic(err)
	}

	Handler = &webdav.Handler{
		FileSystem: FS,
		LockSystem: webdav.NewMemLS(),
	}

}

// Open a file
func (hfs *HTTPFS) Open(path string) (http.File, error) {
	path = hfs.Prefix + path

	f, err := FS.OpenFile(CTX, path, os.O_RDONLY, 0644)
	if err != nil {
		return nil, err
	}

	return f, nil
}

// ReadFile is adapTed from ioutil
func ReadFile(path string) ([]byte, error) {
	f, err := FS.OpenFile(CTX, path, os.O_RDONLY, 0644)
	if err != nil {
		return nil, err
	}

	buf := bytes.NewBuffer(make([]byte, 0, bytes.MinRead))

	// If the buffer overflows, we will get bytes.ErrTooLarge.
	// Return that as an error. Any other panic remains.
	defer func() {
		e := recover()
		if e == nil {
			return
		}
		if panicErr, ok := e.(error); ok && panicErr == bytes.ErrTooLarge {
			err = panicErr
		} else {
			panic(e)
		}
	}()
	_, err = buf.ReadFrom(f)
	return buf.Bytes(), err
}

// WriteFile is adapTed from ioutil
func WriteFile(filename string, data []byte, perm os.FileMode) error {
	f, err := FS.OpenFile(CTX, filename, os.O_WRONLY|os.O_CREATE|os.O_TRUNC, perm)
	if err != nil {
		return err
	}
	n, err := f.Write(data)
	if err == nil && n < len(data) {
		err = io.ErrShortWrite
	}
	if err1 := f.Close(); err == nil {
		err = err1
	}
	return err
}

// WalkDirs looks for files in the given dir and returns a list of files in it
// usage for all files in the b0x: WalkDirs("", false)
func WalkDirs(name string, includeDirsInList bool, files ...string) ([]string, error) {
	f, err := FS.OpenFile(CTX, name, os.O_RDONLY, 0)
	if err != nil {
		return nil, err
	}

	fileInfos, err := f.Readdir(0)
	if err != nil {
		return nil, err
	}

	err = f.Close()
	if err != nil {
		return nil, err
	}

	for _, info := range fileInfos {
		filename := path.Join(name, info.Name())

		if includeDirsInList || !info.IsDir() {
			files = append(files, filename)
		}

		if info.IsDir() {
			files, err = WalkDirs(filename, includeDirsInList, files...)
			if err != nil {
				return nil, err
			}
		}
	}

	return files, nil
}
