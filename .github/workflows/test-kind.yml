name: test-kind
on:
  pull_request:
    paths-ignore:
      - "**.md"
      - "**.jpg"
      - "**.png"
      - "**.gif"
      - "**.svg"
      - "adr/**"
      - "docs/**"

# Abort prior jobs in the same workflow / PR
concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: "Dependency: Install Golang"
        uses: actions/setup-go@v3
        with:
          go-version: 1.19.x

      - name: "Dependency: Install Docker Buildx"
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: "Dependency: Install Kind"
        run: |
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.14.0/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind

      - name: "Dependency: Kind Cluster Init"
        run: kind delete cluster && kind create cluster

      - name: "Install Kubectl"
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          curl -LO "https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
          echo "$(cat kubectl.sha256)  kubectl" | sha256sum --check
          install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl  

      - name: "Checkout Repo"
        uses: actions/checkout@v3

      - name: "Build CLI"
        run: make build-cli-linux-amd ARCH=amd64

      - name: "Zarf Agent: Login to Docker Hub"
        uses: docker/login-action@v2
        with:
          username: zarfdev
          password: ${{ secrets.ZARF_DEV_DOCKERHUB }}

      - name: "Zarf Agent: Build and Publish the Image"
        run: |
          cp build/zarf build/zarf-linux-amd64
          docker buildx build --push --platform linux/amd64 --tag zarfdev/agent:$GITHUB_SHA .

      - name: "Make Packages"
        run: make init-package build-examples ARCH=amd64 AGENT_IMAGE=zarfdev/agent:$GITHUB_SHA

      - name: "Run Tests"
        # NOTE: We want to test providing a cluster to the test framework so this one creates its own KinD cluster
        #       rather than having the test suite do it. The K3d tests do a self-provisioned cluster and the K3s tests
        #       use Zarf to create the cluster. In this test a single cluster will be used throughout the test run.
        run: make test-e2e ARCH=amd64

      - name: "Cleanup"
        run: |
          make destroy
          kind delete cluster
