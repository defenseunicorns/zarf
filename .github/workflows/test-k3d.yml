name: test-k3d
on:
  pull_request:
    paths-ignore:
      - "**.md"
      - "**.jpg"
      - "**.png"
      - "**.gif"
      - "**.svg"
      - "adr/**"
      - "docs/**"

jobs:
  validate:
    runs-on: self-hosted
    steps:
      - name: "Install GoLang"
        uses: actions/setup-go@v3
        with:
          go-version: 1.18.x

      - name: "Checkout Repo"
        uses: actions/checkout@v3

      - name: "K3d cluster init"
        run: k3d cluster delete && k3d cluster create

      - name: "Build CLI"
        run: make build-cli-linux-amd ARCH=amd64

      - name: "Make Packages"
        run: make init-package build-examples ARCH=amd64 AGENT_IMAGE=zarfdev/agent:${{ github.event.inputs.versionTag }}

      - name: "Set up Docker Buildx"
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: "Login to Docker Hub"
        uses: docker/login-action@v2
        with:
          username: zarfdev
          password: ${{ secrets.ZARF_DEV_DOCKERHUB }}

      - name: "Copy binaries for packaging"
        run: cp build/zarf build/zarf-linux-amd64

      - name: "Build and Publish the Image"
        run: docker buildx build --push --platform linux/amd64 --tag zarfdev/agent:${{ github.event.inputs.versionTag }} .

      - name: "Run Tests"
        # NOTE: This test run will create its own K3d cluster. A single cluster will be used throughout the test run.
        run: make test-e2e ARCH=amd64

      - name: "Cleanup"
        run: make destroy
